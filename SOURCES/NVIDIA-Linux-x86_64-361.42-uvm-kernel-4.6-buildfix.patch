
In kernel 4.6 page_cache_release() got renamed to put_page()
and get_user_page() to get_user_page_remote()

The uvm parts are 64bit only.

Signed-off-by: Thomas Backlund <tmb@mageia.org>


diff -Nurp NVIDIA-Linux-x86_64-361.42.orig/kernel/nvidia-uvm/uvm8_tools.c NVIDIA-Linux-x86_64-361.42/kernel/nvidia-uvm/uvm8_tools.c
--- NVIDIA-Linux-x86_64-361.42.orig/kernel/nvidia-uvm/uvm8_tools.c	2016-03-23 01:48:41.000000000 +0200
+++ NVIDIA-Linux-x86_64-361.42/kernel/nvidia-uvm/uvm8_tools.c	2016-04-21 14:57:48.845865678 +0300
@@ -157,7 +157,11 @@ static NV_STATUS map_user_pages(NvU64 us
     }
 
     down_read(&current->mm->mmap_sem);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 6, 0)
     ret = get_user_pages(current, current->mm, user_va, num_pages, 1, 0, *pages, NULL);
+#else
+    ret = get_user_pages_remote(current, current->mm, user_va, num_pages, 1, 0, *pages, NULL);
+#endif
     up_read(&current->mm->mmap_sem);
     if (ret != num_pages) {
         status = NV_ERR_INVALID_ARGUMENT;
diff -Nurp NVIDIA-Linux-x86_64-361.42.orig/kernel/nvidia-uvm/uvm_full_pagetbl_mgmt.c NVIDIA-Linux-x86_64-361.42/kernel/nvidia-uvm/uvm_full_pagetbl_mgmt.c
--- NVIDIA-Linux-x86_64-361.42.orig/kernel/nvidia-uvm/uvm_full_pagetbl_mgmt.c	2016-03-23 01:48:41.000000000 +0200
+++ NVIDIA-Linux-x86_64-361.42/kernel/nvidia-uvm/uvm_full_pagetbl_mgmt.c	2016-04-21 14:59:16.072797826 +0300
@@ -2907,7 +2907,11 @@ NV_STATUS uvmfull_access_memory(UvmVaspa
 
         // get userPA for this range
         down_read(&current->mm->mmap_sem);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 6, 0)
         returnVal = get_user_pages(current, current->mm, (unsigned long)(UVM_ALIGN_ADDR(userCopyBuffer, PAGE_SIZE_4K)),
+#else
+        returnVal = get_user_pages_remote(current, current->mm, (unsigned long)(UVM_ALIGN_ADDR(userCopyBuffer, PAGE_SIZE_4K)),
+#endif
             userPagesReq, 1, 0, tempUserPageArray, NULL);
         up_read(&current->mm->mmap_sem);
 
@@ -2937,7 +2941,11 @@ cleanup_vadesc:
                     set_page_dirty_lock(tempUserPageArray[i]);
 
             UVM_PANIC_ON(tempUserPageArray[i] == 0);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 6, 0)
             page_cache_release(tempUserPageArray[i]);
+#else
+            put_page(tempUserPageArray[i]);
+#endif
             tempUserPageArray[i] = 0;
         }
 
